name: Continuous Deployment Workflow

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.export_image_tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create environment variable
        run: echo "${{ secrets.ENV_STAGING}}" >> .env.production
      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      - name: Extract Git Tag
        run: echo "IMAGE_TAG=$GITHUB_REF_NAME-$GITHUB_RUN_NUMBER-$SHORT_SHA" >> $GITHUB_ENV
      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webbbfe:${{ env.IMAGE_TAG }}
      - name: Verify
        run: |
          echo IMAGE_TAG=$IMAGE_TAG
          echo ${{ steps.docker_build.outputs.digest }}
      - name: Export IMAGE_TAG to github output
        id: export_image_tag
        run: echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh
        env:
          IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_PKEY }}
          port: ${{ secrets.DO_PORT }}
          script: |
            docker ps -q --filter "name=webbbfe" | grep -q . && docker stop webbbfe
            docker pull ${{ secrets.DOCKER_USERNAME }}/webbbfe:${{ env.IMAGE_TAG }}
            docker run -d -p 80:3000 --rm --name webbbfe ${{ secrets.DOCKER_USERNAME }}/webbbfe:${{ env.IMAGE_TAG }}
